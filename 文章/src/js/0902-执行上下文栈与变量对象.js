/* 
    JavaScript引擎并非一行一行地分析和执行程序，而是一段一段地分析执行。
    当执行一段代码的时候，会进行一个准备工作（比如变量提升，函数提升）

    可执行代码
        JS中可执行代码有三种
            1.全局代码
            2.函数代码
            3.eval代码
    当执行到一个函数的时候，就会进行准备工作，这里的准备工作，让我们用个更专业一点的说法，就叫做执行上下文

    执行上下文栈
        当我们写的函数很多时，如何管理创建的那么多执行上下文呢？
        JavaScript引擎创建了执行上下文栈用来管理执行上下文

    对于每个执行上下文，都有三个重要属性：
        1.变量对象
        2.作用域链
        3.this

    变量对象
        变量对象是执行上下文相关的数据作用域，存储了在上下文中定义的变量和函数声明
        因为不同执行上下文的变量对象稍有不同
    
    全局上下文
        全局对象是预定义的对象，作为JavaScript的全局函数和全局属性的占位符。
        通过使用全局对象，可以访问所有其他所有预定义的对象，函数和属性
        在顶层JavaScript代码中， 可以用关键字this引用全局对象。 
        因为全局对象是作用域链的头这意味着所有非限定性的变量和函数名都会作为该对象的属性来查询。
*/